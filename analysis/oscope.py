import sys
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
from matplotlib.animation import FuncAnimation

N_SAMPLE = 256 # Number of samples per waveform
N_CHANNEL = 30 # Number of channels per acdc board
N_BOARDS = 8 # Maximum number of acdc boards



def animate(i, x, calib, f, t):
	filename = './Results/Data_Oscope.txt'
	data = np.loadtxt(filename, delimiter=" ", usecols=range(f+1,t+2));
	y = data - calib


	prefix = 'ch'
	labels = [(prefix+str(f)),(prefix+str(f+1)),(prefix+str(f+2)),(prefix+str(f+3)),(prefix+str(f+4)),(prefix+str(f+5))]

	ax.clear()
	for i in range(0,6):
		ax.plot(x, y[:,i] ,label = labels)

	plt.xlabel('Sample')
	plt.xlim(0,256)
	plt.ylabel('ADC')

	plt.grid(True, 'both', 'both')

	
	plt.legend(labels, bbox_to_anchor=(1.01, 1), loc='upper left')

	# Main execution:::::::::
if __name__ == "__main__":
	fromCh = sys.argv[1]
	fromCh = int(fromCh)
	toCh = sys.argv[2]
	toCh = int(toCh)
	bi = sys.argv[3]

	# Set the filename from an input argument
	calibfile = './autogenerated_calibrations/PEDS_ACDC_board' + bi + '.txt'
	calib = np.loadtxt(calibfile, delimiter=" ", usecols=range(fromCh,toCh+1));
	x = range(0,N_SAMPLE)

	name = 'ACDC - PSEC live plot, channel ' + str(fromCh) + ' to ' + str(toCh)

	fig= plt.figure(num=name, figsize=(10,10))
	ax = fig.add_subplot(1,1,1)

	anim = FuncAnimation(fig, animate, fargs=(x, calib, fromCh, toCh), frames=None, interval=40, blit=False)
	plt.show()

